/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/authInfo?dataTarget=operator": {
    /**
     * #2事業者情報取得
     * @description 事業者識別子（ローカル）が指定された場合は、事業者識別子（ローカル）で検索を実施し、該当する結果をOperatorModelで返却します。
     * 事業者識別子（ローカル）の指定がない場合は、ログインしている事業者識別子（内部）の事業者情報を取得します。
     *
     * 取得されるモデル：OperatorModel
     *
     * 事業者識別子（ローカル）は法人番号を登録します。
     * - #2事業者情報取得に追加するQueryパラメータ
     *   - 下記のQueryパラメータが指定された場合、事業者識別子（ローカル）で検索を行う。未選択の場合は、ログインしている事業者識別子（内部）で検索を行います。
     *     - openOperatorId
     */
    get: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example operator
           */
          dataTarget: string;
          /**
           * @description 事業者識別子（ローカル）
           * @example 1234567890123
           */
          openOperatorId?: string;
        };
      };
      responses: {
        /** @description OperatorModelを取得 */
        200: {
          content: {
            "application/json": components["schemas"]["traceability.OperatorModel"];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
    /**
     * #1事業者情報更新
     * @description 事業者識別子（内部）の事業者情報を更新します。
     *
     * 使用するモデル：OperatorModel
     *
     * - operatorId、openOperatorId は変更できません。
     *
     * - globalOperatorIdは全ての登録情報上で重複して登録はできません。
     *
     * - 更新時に指定するoperatorIdは、認証によって得られたoperatorIdと同じ値を指定する必要があります。異なる場合は403エラーとなります。
     */
    put: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example operator
           */
          dataTarget: string;
        };
      };
      /** @description Request Body */
      requestBody: {
        content: {
          "application/json": components["schemas"]["traceability.OperatorModel"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["traceability.OperatorModel"];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/authInfo?dataTarget=plant": {
    /**
     * #4事業所一覧取得
     * @description 事業者識別子（内部）に紐づけられている事業所識別子（内部）の一覧を取得します。
     *
     * 取得されるモデル：PlantModel
     */
    get: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example plant
           */
          dataTarget: string;
        };
      };
      responses: {
        /** @description PlantModelの配列を取得 */
        200: {
          content: {
            "application/json": components["schemas"]["traceability.PlantModel"][];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
    /**
     * #3事業所情報更新
     * @description 事業者識別子（内部）に紐づいた事業所を登録または内容を更新します。
     *
     * 使用するモデル：PlantModel
     *
     * - operatorId、plantIdは変更できません。
     *
     * - globalPlantIdは同じ事業者内では重複して登録はできません。
     *
     * - openPlantIdは末尾6桁が数字であり、同じ事業者内では重複して登録はできません。
     *
     * - 更新時に指定するoperatorIdは、認証によって得られたoperatorIdと同じ値を指定する必要があります。異なる場合は403エラーとなります。
     *
     * - plantIdをnull値で指定した場合は新規作成の処理となります。Response BodyのPlantModelに発番されたplantIdが埋め込まれます。
     */
    put: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example plant
           */
          dataTarget: string;
        };
      };
      /** @description Request Body */
      requestBody: {
        content: {
          "application/json": components["schemas"]["traceability.PlantModel"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["traceability.PlantModel"];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/datatransport?dataTarget=cfp&traceIds={uuid}": {
    /**
     * #14CFP情報一覧取得
     * @description トレース識別子に紐づけられているCFP情報の一覧を取得します。
     *
     * traceIdは複数のIdを指定することで、該当するCFP情報の一覧を取得できます。指定は最大50項目まで可能です。
     *
     * （複数の問い合わせ例）/api/v1/datatransport?dataTarget=cfp?traceId=d9a38406-cae2-4679-b052-15a75f5531f6,d9a38406-cae2-4679-b052-15a75f5531f7
     *
     * 取得されるモデル：CfpModel
     *
     * - cfpType: 登録するCFPの種別を識別します。現在は下記の種別のいずれかが返却されます。それぞれの値と意味合いは下記の通りです。
     *
     *   - preProduction → 前処理自社由来排出量
     *   - mainProduction → 製造自社由来排出量
     *   - preComponent → 前処理部品由来排出量
     *   - mainComponent → 製造部品由来排出量
     *   - preProductionTotal → 前処理自社由来排出量（合計）
     *   - mainProductionTotal → 主な製造自社由来排出量（合計）
     *   - preComponentTotal → 前処理部品由来排出量（合計）
     *   - mainComponentTotal → 主な製造部品由来排出量（合計）
     *   - preProductionResponse → 前処理部品由来排出量（回答）
     *   - mainProductionResponse → 主な製造部品由来排出量（回答）
     *
     * - 取得時のソート順：リクエストのtraceIdsの先頭から順番に返却
     *
     * ### DQRの取得
     *
     * - dqrType:トレーサビリティ管理システムでは工程毎にDQRを設定します。dqrTypeとcfpTypeの関係は下記の通りになります。
     *   - preProsessing → 前処理工程で排出されるCFP値のDQRを示します。対象となるcfpTypeはpreProductionとpreComponentになります
     *   - mainProsessing → 製造工程で排出されるCFP値のDQRを示します。対象となるcfpTypeはmainProductionとmainComponentになります
     *   - preProsessingTotal → 前処理工程の合計で排出されるCFP値のDQRを示します。対象となるcfpTypeはpreProductionTotalとpreComponentTotalになります
     *   - mainProsessingTotal → 製造工程の合計で排出されるCFP値のDQRを示します。対象となるcfpTypeはmainProductionTotalとmainComponentTotalになります
     *   - preProsessingResponse → 川上の前処理工程で排出されるCFP値のDQRを示します。対象となるcfpTypeはpreProductionResponseになります
     *   - mainProsessingResponse → 川上の製造工程で排出されるCFP値のDQRを示します。対象となるcfpTypeはmainProductionResponseになります
     */
    get: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example cfp
           */
          dataTarget: string;
          /**
           * @description トレース識別子（複数指定可能(最大50まで)、カンマ区切りで指定）
           * @example d9a38406-cae2-4679-b052-15a75f5531f6,d9a38406-cae2-4679-b052-15a75f5531f6
           */
          traceIds: string;
        };
      };
      responses: {
        /** @description CfpModelの配列を取得 */
        200: {
          content: {
            "application/json": components["schemas"]["traceability.CfpModel"][];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/datatransport?dataTarget=cfp": {
    /**
     * #15CFP情報登録
     * @description トレース識別子に紐づけられている製品にCFP情報を新規作成および更新します。
     *
     * 使用するモデル：CfpModel
     *
     * - cfpIdをnull値で指定した場合は新規作成の処理となります。Response BodyのCfpModelに発番されたcfpIdが埋め込まれます。
     * すでに他のcfpTypeを登録している場合は、同じcfpIdを指定して更新処理を実施します。
     *
     * - ghgDeclaredUnit: 指定された任意の値をGHG量単位として登録します。
     *
     * - cfpCertificateList: ファイルの場所を指し示すURIを配列で複数登録することができます。
     *
     * - cfpType: 登録するCFPの種別を識別します。現在は下記の種別を選択することができます。それぞれの値と意味合いは下記の通りです。以下の種別以外が指定された場合は400エラーとなります。
     *   - preProduction → 前処理自社由来排出量
     *   - mainProduction → 製造自社由来排出量
     *   - preComponent → 前処理部品由来排出量
     *   - mainComponent → 製造部品由来排出量
     *
     * - トレーサビリティ管理システムへのcfp情報登録は上記全てのカテゴリーを一度に登録します。指定がないカテゴリーがある場合は400エラーとなります。
     *
     * - ghgDeclaredUnitにenumを設定します。enumの制限は下記です。
     *   - kgCO2e/liter
     *   - kgCO2e/kilogram
     *   - kgCO2e/cubic-meter
     *   - kgCO2e/kilowatt-hour
     *   - kgCO2e/megajoule
     *   - kgCO2e/ton-kilometer
     *   - kgCO2e/square-meter
     *   - kgCO2e/unit
     *
     * ### CFPの設定
     * 本APIを使い、CFPを設定する場合は下記の注意点がございます。
     * - cfpTypeは「preProduction、mainProduction、preComponent、mainComponentの4つを要素とする配列を登録してください。（どれか1つでも指定が足りない場合は400Errorになります）
     *
     * - 全ての要素で、cfpId, traceId, ghgDeclaredUnitには同じ値を指定してください。（同じでない場合は400Errorになります）
     *
     * - どれか1つの要素を更新する場合は、それ以外の要素には元々入っている値を指定してください。（0値等を指定すると、0で更新されます）
     *
     * - ghgEmissionに値を登録しない要素はにはghgEmissionに0を指定してください。
     *
     * - ghgEmissionの有効桁数は小数点第5位までのため、第6位を切り上げた状態で登録を実施してください
     *
     * ### DQRの設定
     *
     * - dqrType:トレーサビリティ管理システムでは工程毎にDQRを設定します。dqrTypeを設定し、それぞれの考え方は下記になります
     *   - preProsessing → 前処理工程で排出されるCFP値のDQRを示します。対象となるcfpTypeはpreProductionとpreComponentになります
     *   - mainProsessing → 製造工程で排出されるCFP値のDQRを示します。対象となるcfpTypeはmainProductionとmainComponentになります
     *
     * - 同じtraceId・cfpIdで同じdqrTypeにはcfpTypeに該当する値が登録されていない場合でも同じdqrTypeの値を指定します
     *
     * - dqrValueの有効桁数は小数点第5位までのため、第6位を切り上げた状態で登録を実施してください
     */
    put: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example cfp
           */
          dataTarget: string;
        };
      };
      /** @description Request Body */
      requestBody: {
        content: {
          "application/json": components["schemas"]["traceability.CfpModel"][];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["traceability.CfpModel"][];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/datatransport?dataTarget=cfpCertification&traceId={uuid}": {
    /**
     * #18CFP証明書情報取得
     * @description トレース識別子に紐づけられているCFP証明書のファイルをダウンロードするために必要な情報を取得します。
     *
     * 取得されるモデル：CfpCertificationModel
     */
    get: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example cfpCertification
           */
          dataTarget: string;
          /**
           * @description トレース識別子
           * @example d9a38406-cae2-4679-b052-15a75f5531f6
           */
          traceId: string;
        };
      };
      responses: {
        /** @description CfpModelの配列を取得 */
        200: {
          content: {
            "application/json": components["schemas"]["traceability.CfpCertificationModel"][];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/datatransport?dataTarget=parts": {
    /**
     * #8事業者部品一覧取得
     * @description 事業者識別子（内部）に紐づけられている製品の一覧を取得します。
     *
     * 取得されるモデル：PartsModel
     *
     * - 取得される製品一覧には子で作成した製品も含まれます。親のみを検索する場合はparentFlagをtrueにして検索をします。
     *
     * - #8 事業者部品一覧取得に追加するQueryパラメータ
     *   - 下記のQueryパラメータが指定された場合は設定されたパラメータを全て満たすものを検索します。未設定のパラメータは検索条件には使用しません。
     *     - traceId
     *     - partsName
     *     - plantId
     *     - parentFlag
     *
     * - 取得時のソート順：部品項目の昇順
     */
    get: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example parts
           */
          dataTarget: string;
          /**
           * @description 最大取得件数。製品一覧は部品項目の昇順となり、先頭からの取得になります。limitで指定した件数まで取得します。limitの指定は最大100件になります。
           * @example 50
           */
          limit?: number;
          /**
           * @description データ取得開始位置の識別子を設定します。本項目はResponse HeaderのLink項目で返却されたクエリパラメータの組み合わせにて利用されることを想定しており、after単体での利用は想定しておりません。
           * @example d9a38406-cae2-4679-b052-15a75f553110
           */
          after?: string;
          /**
           * @description 検索対象のトレース識別子
           * @example d9a38406-cae2-4679-b052-15a75f5531e6
           */
          traceId?: string;
          /**
           * @description 検索対象の部品項目
           * @example B01
           */
          partsName?: string;
          /**
           * @description 検索対象の事業所識別子（内部）
           * @example 571a6b0f-1cd3-1509-5b57-15a9054814aa
           */
          plantId?: string;
          /**
           * @description 検索対象の親部品フラグ。parentFlagを指定しない場合は登録されている親・子両方の製品が返却されます。
           * @example false
           */
          parentFlag?: boolean;
        };
      };
      responses: {
        /** @description PartsModelの配列を取得 */
        200: {
          headers: {
            /** @description \<https://example.com/api/v1/datatransport?dataTarget=parts&limit=100&after=(uuid)\>; rel="next */
            Link?: string;
          };
          content: {
            "application/json": components["schemas"]["traceability.PartsModel"][];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
    /**
     * #5部品情報更新
     * @description 事業者識別子（内部）、事業所識別子（内部）に紐づいた部品を登録または内容を更新します。
     *
     * 使用するモデル：PartsModel
     *
     * - operatorIdは変更できません。更新時に指定するoperatorIdは、認証によって得られたoperatorIdと同じ値を指定する必要があります。異なる場合は403エラーとなります。
     *
     * - traceId,plantIdは変更できません。partsName,supportPartsName,plantIdの組み合わせでtraceIdが採番されるため変更できません。
     *
     * - traceIdをnull値で指定した場合は新規作成の処理となります。Response BodyのPartsModelに発番されたtraceIdが埋め込まれます。
     *
     * - traceIdの発番ルール：
     * operatorId, plantId, partsName, supportPartsNameの組み合わせが一意になるようにtraceIdを発番します。
     * これらの内容のいずれかに変更がある場合は新規のtraceIdが発番されます。
     *
     * - 補助項目：
     * 補助項目の利用方法としては、各社で管理している部品番号は同一でありながら、CFP情報の区別が必要なケース（仕入先が異なる、工場が異なる、集計期間が異なる等）において、トレース識別子を区別するために利用することを想定しています。
     *
     * - 親部品作成時は活動量の指定は不要のためamountRequiredにはnullを指定します。
     *
     * - amountRequiredUnitは下記の値のみ登録が可能です。
     *   - liter
     *   - kilogram
     *   - cubic-meter
     *   - kilowatt-hour
     *   - megajoule
     *   - ton-kilometer
     *   - square-meter
     *   - unit
     */
    put: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example parts
           */
          dataTarget: string;
        };
      };
      /** @description Request Body */
      requestBody: {
        content: {
          "application/json": components["schemas"]["traceability.PartsModel"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["traceability.PartsModel"];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/datatransport?dataTarget=partsStructure&traceId={uuid}": {
    /**
     * #9部品構成情報一覧取得
     * @description トレース識別子で指定した部品の部品構成情報を取得します。
     *
     * 使用するモデル：PartsStructureModel
     *
     * - 親のPartsModelと子のPartsModelのリストで構成されます。仕入先と仕入元の部品関係を表すため、2階層の親子関係で表現されます。
     */
    get: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example partsStructure
           */
          dataTarget: string;
          /**
           * @description トレース識別子
           * @example d9a38406-cae2-4679-b052-15a75f5531f6
           */
          traceId: string;
        };
      };
      responses: {
        /** @description PartsStructureModelを取得 */
        200: {
          content: {
            "application/json": components["schemas"]["traceability.PartsStructureModel"];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/datatransport?dataTarget=partsStructure": {
    /**
     * #6部品構成情報一覧更新
     * @description トレース識別子で指定した部品の部品構成情報を登録または更新します。
     *
     * 使用するモデル：PartsStructureModel
     *
     * - 親のPartsModelと子のPartsModelのリストで構成されます。
     *   仕入先と仕入元の部品関係を表すため、2階層の親子関係で表現されます。
     *
     * - 親部品が登録済みの場合は、既に発番されているtraceIdを指定してください。
     *   親部品のtraceIdをnull値で指定した場合は親部品の新規作成の処理となります。
     *   Response BodyのPartsStructureModelモデルに発番されたtraceIdが埋め込まれます。
     *
     * - traceIdの発番ルール：operatorId, plantId, partsName, supportPartsNameの組み合わせが一意になるようにtraceIdを発番します。
     *
     * - 子製品に設定するoperatorIdは自社の事業者識別子（内部）を、plantIdは自社の事業所識別子（内部）のうちのどれかを登録してください。
     *
     * - operatorIdは変更できません。指定するoperatorIdは、認証によって得られたoperatorIdと同じ値を指定する必要があります。異なる場合は403エラーとなります。
     *
     * - traceId,plantIdは変更できません。partsName,supportPartsName,plantIdの組み合わせでtraceIdが採番されるため変更できません。
     *
     * - 活動量と活動量単位：単位による活動量やCFP値の換算は実施しません。
     *
     * - 親部品には活動量は登録できないため、nullを指定します。
     *
     * - 活動量には親部品の単位量あたりに必要な子部品の活動量を登録してください。
     *
     * - amountRequiredUnitは下記の値のみ登録が可能です。
     *   - liter
     *   - kilogram
     *   - cubic-meter
     *   - kilowatt-hour
     *   - megajoule
     *   - ton-kilometer
     *   - square-meter
     *   - unit
     */
    put: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example partsStructure
           */
          dataTarget: string;
        };
      };
      /** @description Request Body */
      requestBody: {
        content: {
          "application/json": components["schemas"]["traceability.PartsStructureModel"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["traceability.PartsStructureModel"];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/datatransport?dataTarget=status": {
    /**
     * #11依頼・回答情報一覧取得
     * @description 事業者識別子（内部）に紐づいている依頼・回答情報の一覧を取得します。
     *
     * 取得されるモデル：StatusModel
     *
     * - requestStatus：取引の依頼種別で指定した範囲が扱うステータスを配列で全て返却します。
     * トレーサビリティ管理システムでは下記が返却されます。
     *
     *   - cfpResponseStatus: CFPの回答状況を表します。ステータスの種類と意味合いは以下になります。
     *
     *     - NOT_COMPLETED: 依頼中
     *     - COMPLETED: 回答完了
     *     - REJECT: 差戻
     *     - CANCEL: 取消
     *
     *   - tradeTreeStatus: 対象の取引関係情報が全て終端したかを表します。ステータスの種類と意味合いは以下になります。
     *
     *     - TERMINATED: 終端済み
     *     - UNTERMINATED: 未終端
     *
     * - requestType：取引の依頼種別を指定します。現在は下記指定が可能です。
     *
     *   - CFP（固定値になります）
     *
     * - #11依頼・回答情報一覧取得に追加するQueryパラメータ
     *   下記のQueryパラメータが指定された場合は一致するものを検索します。未設定の場合は検索条件には使用しません。
     *   - statusTarget: 依頼情報（自社が依頼元）か回答情報（自社が依頼先）かを絞り込みます。指定できる値は下記になります。
     *   （※こちらのQueryパラメータを指定することを強く推奨いたします。クエリパラメータを指定しない場合は、応答時間が長くなる可能性がございます）
     *     - REQUEST: 依頼情報（自社が依頼元）のステータスを取得します
     *     - RESPONSE: 回答情報（自社が依頼先）のステータスを取得します
     *
     *   - traceId: 指定されたstatusIdに一致する結果のみ返却します。絞り込みは"statusTarget=REQUEST"を併用した場合のみ有効になります
     *
     *   - statusId: 指定されたstatusIdに一致する結果のみ返却します。絞り込みは"statusTarget=RESPONSE"を併用した場合は検索時間が短いが、statusIdのみ指定した場合は応答時間が長くなる可能性がございます。
     *
     * - 取得時のソート順：取引関係作成日時の降順
     */
    get: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example status
           */
          dataTarget: string;
          /**
           * @description 最大取得件数。依頼・回答情報の一覧は先頭からの取得になります。limitで指定した件数まで取得します。limitの指定は最大100件になります。
           * @example 50
           */
          limit?: number;
          /**
           * @description データ取得開始位置の識別子を設定します。本項目はResponse HeaderのLink項目で返却されたクエリパラメータの組み合わせにて利用されることを想定しており、after単体での利用は想定しておりません。
           * @example d9a38406-cae2-4679-b052-15a75f553110
           */
          after?: string;
          /**
           * @description ステータス取得先を指定するクエリパラメータ
           * @example REQUEST
           */
          statusTarget?: "REQUEST" | "RESPONSE";
          /**
           * @description 検索対象の依頼識別子（単独で使用した場合は検索時間が長くなる可能性があります）
           * @example d9a38406-cae2-4679-b052-15a75f5531e9
           */
          statusId?: string;
          /**
           * @description 検索対象のトレース識別子（statusTarget=REQUESTを併用した場合のみ有効）
           * @example d9a38406-cae2-4679-b052-15a75f5531e9
           */
          traceId?: string;
        };
      };
      responses: {
        /** @description StatusModelの配列を取得 */
        200: {
          headers: {
            /** @description \<https://example.com/api/v1/datatransport?dataTarget=status&limit=100&after=(uuid)\>; rel="next */
            Link?: string;
          };
          content: {
            "application/json": components["schemas"]["traceability.StatusModel"][];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
    /**
     * #16依頼情報ステータスの変更（依頼取消・依頼差戻）
     * @description 事業者識別子（内部）に紐づけられている依頼・回答情報のステータスを変更します。
     *
     * トレーサビリティ管理システムではrequestStatusフィールドのcfpResponseStatusが取消(CANCEL)か差戻(REJECT)の場合に取り消しと差戻の処理を実施します。
     *
     * 取消(CANCEL)と差戻以外(REJECT)のステータスが指定された場合は400エラーになります。
     *
     * 依頼差戻の場合のみ、replyMessageに差戻理由を記載し、保存することができます。依頼取消時にはreplyMessageはnullを指定してください。
     *
     * 依頼取消と依頼差戻の使い分けは下記を想定しております
     * - 依頼取消：川下（依頼元）が川上（依頼先）に出している依頼を取り消す時に利用する
     * - 依頼差戻：川上（依頼先）が川下（依頼元）から受けている依頼を取り消す時に利用する
     *
     * 使用するモデル：StatusModel
     */
    put: {
      parameters: {
        query: {
          /**
           * @description データターゲットを指定します。
           * @example status
           */
          dataTarget: string;
        };
      };
      /** @description Request Body */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["traceability.StatusModel"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/datatransport?dataTarget=tradeRequest": {
    /**
     * #10取引依頼情報一覧取得
     * @description 事業者識別子（内部）に紐づけられている取引情報の一覧を取得します。
     *
     * 取得されるモデル：TradeModel
     *
     * - #10取引依頼情報一覧取得に追加するQueryパラメータ
     *   - 下記のQueryパラメータが指定された場合は一致するものを検索します。未設定の場合は検索条件には使用しません。
     *     - traceIds: 指定されたtraceIdにdownstreamTraceIdが一致する結果のみを返却します（複数指定可能(最大50まで)、カンマ区切りで指定）。
     *       またtraceIdsが指定されている場合はlimitのパラメータが指定されたとしても有効にはなりません。
     *
     * - 取得時のソート順：取引関係作成日時の降順
     */
    get: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example tradeRequest
           */
          dataTarget: string;
          /**
           * @description 最大取得件数。取引情報の一覧は依頼元トレース識別子の昇順となり、先頭からの取得になります。limitで指定した件数まで取得します。limitの指定は最大100件になります。
           * @example 50
           */
          limit?: number;
          /**
           * @description データ取得開始位置の識別子を設定します。本項目はResponse HeaderのLink項目で返却されたクエリパラメータの組み合わせにて利用されることを想定しており、after単体での利用は想定しておりません。
           * @example d9a38406-cae2-4679-b052-15a75f553110
           */
          after?: string;
          /**
           * @description 検索対象のトレース識別子（複数指定可能(最大50まで)、カンマ区切りで指定）
           * @example d9a38406-cae2-4679-b052-15a75f5531e9
           */
          traceIds?: string;
        };
      };
      responses: {
        /** @description TraceModelの配列を取得 */
        200: {
          headers: {
            /** @description \<https://example.com/api/v1/datatransport?dataTarget=tradeRequest&limit=100&after=(uuid)\>; rel="next */
            Link?: string;
          };
          content: {
            "application/json": components["schemas"]["traceability.TradeModel"][];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
    /**
     * #7取引関係依頼情報更新
     * @description トレース識別子で指定した部品の取引情報を登録または更新します。
     *
     * 使用するモデル：TradeRequestModel（Trademodel & StatusModel）
     *
     * - downstreamOperatorIdは変更できません。指定するdownstreamOperatorIdは、認証によって得られたoperatorIdと同じ値を指定する必要があります。異なる場合は403エラーとなります。
     *
     * - Reuest Bodyに指定したupstreamOperatorIdが存在しない場合は404エラーとなります。
     *
     * - 新規作成時のTradeModelの内容は以下の通りとなります。
     *
     *   - downstreamOperatorId, upstreamOperatorId, downstreamTraceIdを入力し、tradeIdとupstreamTraceIdはnullを指定してください。
     *   tradeIdはResponse BodyのTradeRquestMdelに発番されたIDが代入されます。
     *
     * - 新規作成時のStatusModelの内容は以下の通りとなります。
     *
     *   - tradeId, statusIdはnullを指定してください。tradeId, statusIdはResponse BodyのTradeRquestMdelに発番されたIDが代入されます。
     *   - requestTypeは"CFP"を指定します。
     *
     * - requestStatusの値およびreplyMessageは変更できない情報になります。
     *
     * - 仕入先トレース識別子（upstreamTraceId）は仕入先のみが回答できる情報のため、納品先事業者からは更新できない情報になります。
     */
    put: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example tradeRequest
           */
          dataTarget: string;
        };
      };
      /** @description Request Body */
      requestBody: {
        content: {
          "application/json": components["schemas"]["traceability.TradeRequestModel"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["traceability.TradeRequestModel"];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/datatransport?dataTarget=tradeResponse": {
    /**
     * #12取引関係回答情報一覧取得
     * @description 事業者識別子（内部）に紐づいた、回答を依頼されている取引情報の一覧を取得します。
     * 取引情報に紐づいた依頼元の部品情報（downstreamTraceIdの部品情報）およびおよびステータスの情報を取得します。
     *
     * 川下の活動量は川上には非開示情報のため、nullを渡します。
     *
     * 取得されるモデル：TradeResponseModel(TradeModel&PartsModel&StatusModel)
     *
     * 取得時のソート順：取引関係作成日時の降順
     */
    get: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example tradeResponse
           */
          dataTarget: string;
          /**
           * @description 最大取得件数。取引情報の一覧は更新日時の降順となり、先頭からの取得になります。limitで指定した件数まで取得します。limitの指定は最大100件になります。
           * @example 50
           */
          limit?: number;
          /**
           * @description データ取得開始位置の識別子を設定します。本項目はResponse HeaderのLink項目で返却されたクエリパラメータの組み合わせにて利用されることを想定しており、after単体での利用は想定しておりません。
           * @example d9a38406-cae2-4679-b052-15a75f553110
           */
          after?: string;
        };
      };
      responses: {
        /** @description TradeModelの配列を取得 */
        200: {
          headers: {
            /** @description \<https://example.com/api/v1/datatransport?dataTarget=tradeResponse&limit=100&after=(uuid)\>; rel="next */
            Link?: string;
          };
          content: {
            "application/json": components["schemas"]["traceability.TradeResponseModel"][];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/datatransport?dataTarget=tradeResponse&tradeId={uuid}&traceId={uuid}": {
    /**
     * #13取引関係回答情報更新
     * @description 取引関係情報識別子で指定した部品の取引情報の依頼に仕入先トレース識別子を登録または更新します。
     *
     * 使用するモデル：なし
     *
     * Response BodyのTradeModelには、指定したtraceIdがupstreamTraceIdとして登録されます。
     */
    put: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example tradeResponse
           */
          dataTarget: string;
          /**
           * @description 取引関係情報識別子。対象の取引関係情報識別子を指定します。
           * @example d9a38406-cae2-4679-b052-15a75f5531f5
           */
          tradeId: string;
          /**
           * @description トレース識別子。登録・更新するトレース識別子を指定します。
           * @example d9a38406-cae2-4679-b052-15a75f5531f6
           */
          traceId: string;
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["traceability.TradeModel"];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/auth/change": {
    /**
     * パスワード変更
     * @description 事業者アカウント識別子のパスワードを変更します。
     *
     * 使用するモデル：ChangePasswordModel
     */
    post: {
      /** @description Request Body */
      requestBody: {
        content: {
          "application/json": components["schemas"]["authentication.ChangePasswordModel"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/auth/login": {
    /**
     * ユーザ当人認証
     * @description 事業者アカウント識別子およびパスワードによりログイン処理を行います。
     *
     * 使用するモデル：LoginInputModel
     *
     * 取得されるモデル：LoginOutputModel
     */
    post: {
      /** @description Request Body */
      requestBody: {
        content: {
          "application/json": components["schemas"]["authentication.LoginInputModel"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["authentication.LoginOutputModel"];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/auth/refresh": {
    /**
     * アクセストークン情報更新
     * @description リフレッシュトークによるアクセストークンの更新処理を行います。
     *
     * 使用するモデル：RefreshInputModel
     *
     * 取得されるモデル：RefreshOutputModel
     */
    post: {
      /** @description Request Body */
      requestBody: {
        content: {
          "application/json": components["schemas"]["authentication.RefreshInputModel"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["authentication.RefreshOutputModel"];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
  "/api/v1/authInfo?dataTarget=operator&operatorIds={uuid}": {
    /**
     * #17事業者情報一覧取得
     * @description operatorIdで指定された事業者識別子（内部）に一致するOperatorModelの一覧を取得します.
     * 最大100件まで一度に指定することができます。
     *
     * 取得されるモデル：OperatorModel
     */
    get: {
      parameters: {
        query: {
          /**
           * @description データターゲット
           * @example operator
           */
          dataTarget: string;
          /**
           * @description 検索対象の事業者識別子（内部）（複数設定可能、カンマ区切りで複数指定）
           * @example d9a38406-cae2-4679-b052-15a75f5531e6,d9a38406-cae2-4679-b052-15a75f5531e7
           */
          operatorIds: string;
        };
      };
      responses: {
        /** @description OperatorModelを取得 */
        200: {
          content: {
            "application/json": components["schemas"]["traceability.OperatorModel"][];
          };
        };
        /** @description リクエスト自体に問題がある場合の異常ステータスコード */
        400: {
          content: {
            "application/json": components["schemas"]["common.HTTP400Error"];
          };
        };
        /** @description 提供された認証情報が無効または問題がある場合の異常ステータスコード */
        401: {
          content: {
            "application/json": components["schemas"]["common.HTTP401Error"];
          };
        };
        /** @description クライアントがリソースへのアクセスを拒否された場合の異常ステータスコード */
        403: {
          content: {
            "application/json": components["schemas"]["common.HTTP403Error"];
          };
        };
        /** @description 要求されたリソースが存在しない場合の異常ステータスコード */
        404: {
          content: {
            "application/json": components["schemas"]["common.HTTP404Error"];
          };
        };
        /** @description システムの内部にてエラーが発生している場合 */
        500: {
          content: {
            "application/json": components["schemas"]["common.HTTP500Error"];
          };
        };
        /** @description システムの外部にてエラーが発生している場合 */
        503: {
          content: {
            "application/json": components["schemas"]["common.HTTP503Error"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    "authentication.ChangePasswordModel": {
      /**
       * Format: string
       * @description 変更後のパスワード
       * @example xx@&1234Pass
       */
      newPassword: string;
    };
    "authentication.LoginInputModel": {
      /**
       * @description 事業者アカウントパスワード
       * @example xx@&&1234Pass
       */
      accountPassword: string;
      /**
       * Format: email
       * @description 事業者アカウントID
       * @example xxx@example.com
       */
      operatorAccountId: string;
    };
    "authentication.LoginOutputModel": {
      /**
       * @description アクセストークン
       * @example eyJhbGciOiJSUzI1NiIsImtpZCI6IjAzZDA3YmJjM2Q3NWM2OTQyNzUxMGY2MTc0ZWIyZjE2NTQ3ZDRhN2QiLCJ0eXAiOiJKV1QifQ.eyJvcGVyYXRvcl9pZCI6IjBmMWViYTkwLTgzOWYtNDA1OS1iOWNiLTcwY2JhZjQ5MDIzOSIsImlzcyI6Imh0dHBzOi8vc2VjdXJldG9rZW4uZ29vZ2xlLmNvbS9kYXRhLXNwYWNlcy1kZXYtajh3bHB1N2oiLCJhdWQiOiJkYXRhLXNwYWNlcy1kZXYtajh3bHB1N2oiLCJhdXRoX3RpbWUiOjE2OTc3NjU3OTEsInVzZXJfaWQiOiI4NmMzNDE2Yy00MDA0LTRjNGUtYTNlNy00MGJiNjY5YTZmNWIiLCJzdWIiOiI4NmMzNDE2Yy00MDA0LTRjNGUtYTNlNy00MGJiNjY5YTZmNWIiLCJpYXQiOjE2OTc3NjU3OTEsImV4cCI6MTY5Nzc2OTM5MSwiZW1haWwiOiJ0ZXN0ZG90ZF90ZXN0QHNhbXBsZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsidGVzdGRvdGRfdGVzdEBzYW1wbGUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.mAe7NTKTiKY-pGYZxvjBejIMpgfgBTz4ymGM2jMDpwBT2aRQCAcV0a2__n3ewgBl1kwR66OcsDq6CbXHu33zRiBGbYehy0aotTb0C81DIGnD__n0w8eYuoXhvp3z2ScOfOPBhCvoA9Eg1Yvk3rgpfQa8eFGCOp1-_RQuiaXo8IqRbg9xgCbo6xaxSvgeup-OHv0tR7IwDmauwCT-RCeU0WxHn6i2YKgUrULFIZSoF8WQuPL0HKEl4-jJbOP2TASTpLyshCDeECq4AaWercYf36A2DZ6udhJSO-lKwPtb5QjGJQbVKd_SINdoMvI2oHvuhzPz5MK4StMCumZ02AZ9sw
       */
      accessToken?: string;
      /**
       * @description リフレッシュトークン
       * @example AMf-vBwoYSJKlMfMCujrEBT3FgWmObWOgMtSp8gWj0R4FSWb6XB88kjxdPojhiL8KXjtONi51kG5hNGmvhwmW0Fkoczq8gcOtBUpKBJdagzBKPGGXGuVLuNBH9RkN-CBtKV6FrHVc8exdtQeeSnaGOs-rLYo0EizEyPN_Ysul2NNh2nkwjABgQ-o0_nZxCPZ1gNPtlnd1dZr5hAlIwNn-nO_sI9lIH8LXX04TX_GfzC3tJZj0EXTUeiyUYjv38jRaEf6iBu77zuE
       */
      refreshToken?: string;
    };
    "authentication.RefreshInputModel": {
      /**
       * @description リフレッシュトークン
       * @example AMf-vBzFGeA7f_c1S8r2HKHkddm0qSSZPoIof2GHOS96QofUoiGepU1oG5o4CYT_YP6jzzZR4W1S4txBKNh2lz5lDzRXlR45r0Dr2VcI2nY0S6mdaT5vLBt9nMEBHweBu43CjrxZ1PV0ZMeyjx2EQlEkfnDEya9EG0B70Mtd4mFbsQNRFYZv0PsNaFrbs_kf-zCjBD5R0wIKPm3F_bQEHHy8MZZmpsD8LofFW_cTUrL5ztr_5XlDblyiOztn47nZaV5p02SPcX_-
       */
      refreshToken?: string;
    };
    "authentication.RefreshOutputModel": {
      /**
       * @description アクセストークン
       * @example eyJhbGciOiJSUzI1NiIsImtpZCI6IjAzZDA3YmJjM2Q3NWM2OTQyNzUxMGY2MTc0ZWIyZjE2NTQ3ZDRhN2QiLCJ0eXAiOiJKV1QifQ.eyJvcGVyYXRvcl9pZCI6IjBmMWViYTkwLTgzOWYtNDA1OS1iOWNiLTcwY2JhZjQ5MDIzOSIsImlzcyI6Imh0dHBzOi8vc2VjdXJldG9rZW4uZ29vZ2xlLmNvbS9kYXRhLXNwYWNlcy1kZXYtajh3bHB1N2oiLCJhdWQiOiJkYXRhLXNwYWNlcy1kZXYtajh3bHB1N2oiLCJhdXRoX3RpbWUiOjE2OTc3NjU3OTEsInVzZXJfaWQiOiI4NmMzNDE2Yy00MDA0LTRjNGUtYTNlNy00MGJiNjY5YTZmNWIiLCJzdWIiOiI4NmMzNDE2Yy00MDA0LTRjNGUtYTNlNy00MGJiNjY5YTZmNWIiLCJpYXQiOjE2OTc3NjU3OTEsImV4cCI6MTY5Nzc2OTM5MSwiZW1haWwiOiJ0ZXN0ZG90ZF90ZXN0QHNhbXBsZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsidGVzdGRvdGRfdGVzdEBzYW1wbGUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.mAe7NTKTiKY-pGYZxvjBejIMpgfgBTz4ymGM2jMDpwBT2aRQCAcV0a2__n3ewgBl1kwR66OcsDq6CbXHu33zRiBGbYehy0aotTb0C81DIGnD__n0w8eYuoXhvp3z2ScOfOPBhCvoA9Eg1Yvk3rgpfQa8eFGCOp1-_RQuiaXo8IqRbg9xgCbo6xaxSvgeup-OHv0tR7IwDmauwCT-RCeU0WxHn6i2YKgUrULFIZSoF8WQuPL0HKEl4-jJbOP2TASTpLyshCDeECq4AaWercYf36A2DZ6udhJSO-lKwPtb5QjGJQbVKd_SINdoMvI2oHvuhzPz5MK4StMCumZ02AZ9sw
       */
      accessToken?: string;
    };
    "common.HTTP400Error": {
      /**
       * @description エラーステータス
       * @example BadRequest
       */
      code?: string;
      /**
       * @description 基盤運営事業者向け調査情報
       * @example id:d9a38406-cae2-4679-b052-15a75f5531e6 timeStamp:2023-09-25T14:30:00Z dataTarget:operator method:GET
       */
      detail?: string;
      /**
       * @description エラーメッセージ
       * @example Invalid request parameters
       */
      message?: string;
    };
    "common.HTTP401Error": {
      /**
       * @description エラーステータス
       * @example Unauthorized
       */
      code?: string;
      /**
       * @description 基盤運営事業者向け調査情報
       * @example id:d9a38406-cae2-4679-b052-15a75f5531e6 timeStamp:2023-09-25T14:30:00Z dataTarget:operator method:GET
       */
      detail?: string;
      /**
       * @description エラーメッセージ
       * @example Invalid credentials
       */
      message?: string;
    };
    "common.HTTP403Error": {
      /**
       * @description エラーステータス
       * @example AccessDenied
       */
      code?: string;
      /**
       * @description 基盤運営事業者向け調査情報
       * @example id:d9a38406-cae2-4679-b052-15a75f5531e6 timeStamp:2023-09-25T14:30:00Z dataTarget:operator method:GET
       */
      detail?: string;
      /**
       * @description エラーメッセージ
       * @example You do not have the necessary privileges
       */
      message?: string;
    };
    "common.HTTP404Error": {
      /**
       * @description エラーステータス
       * @example NotFound
       */
      code?: string;
      /**
       * @description 基盤運営事業者向け調査情報
       * @example id:d9a38406-cae2-4679-b052-15a75f5531e6 timeStamp:2023-09-25T14:30:00Z dataTarget:operator method:GET
       */
      detail?: string;
      /**
       * @description エラーメッセージ
       * @example Endpoint not found
       */
      message?: string;
    };
    "common.HTTP500Error": {
      /**
       * @description エラーステータス
       * @example InternalServerError
       */
      code?: string;
      /**
       * @description 基盤運営事業者向け調査情報
       * @example id:d9a38406-cae2-4679-b052-15a75f5531e6 timeStamp:2023-09-25T14:30:00Z dataTarget:operator method:GET
       */
      detail?: string;
      /**
       * @description エラーメッセージ
       * @example Unexpected error occurred
       */
      message?: string;
    };
    "common.HTTP503Error": {
      /**
       * @description エラーステータス
       * @example Service Unavailable
       */
      code?: string;
      /**
       * @description 基盤運営事業者向け調査情報
       * @example id:d9a38406-cae2-4679-b052-15a75f5531e6 timeStamp:2023-09-25T14:30:00Z dataTarget:operator method:GET
       */
      detail?: string;
      /**
       * @description エラーメッセージ
       * @example Unexpected error occurred in outer service
       */
      message?: string;
    };
    "traceability.CfpModel": {
      /**
       * Format: uuid
       * @description CFP情報識別子
       * @example d9a38406-cae2-4679-b052-15a75f5531f5
       */
      cfpId: string | null;
      /**
       * @description 登録するCFP種別
       * @example preProduction
       * @enum {string}
       */
      cfpType: "preProduction" | "mainProduction" | "preComponent" | "mainComponent" | "preProductionTotal" | "mainProductionTotal" | "preComponentTotal" | "mainComponentTotal" | "preProductionResponse" | "mainProductionResponse";
      /**
       * @description GHG量単位
       * @example kilogram
       * @enum {string}
       */
      ghgDeclaredUnit: "kgCO2e/liter" | "kgCO2e/kilogram" | "kgCO2e/cubic-meter" | "kgCO2e/kilowatt-hour" | "kgCO2e/megajoule" | "kgCO2e/ton-kilometer" | "kgCO2e/square-meter" | "kgCO2e/unit";
      /**
       * Format: double
       * @description GHG量
       * @example 1.12345
       */
      ghgEmission: number | null;
      /**
       * @description 登録するDQR種別
       * @example preProcessing
       * @enum {string}
       */
      dqrType: "preProcessing" | "mainProcessing" | "preProcessingTotal" | "mainProcessingTotal" | "preProcessingResponse" | "mainProcessingResponse";
      dqrValue: {
        /**
         * Format: double
         * @description 技術的代表性
         * @example 2.1
         */
        TeR: number | null;
        /**
         * Format: double
         * @description 地理的代表性
         * @example 2.2
         */
        GeR: number | null;
        /**
         * Format: double
         * @description 時間的代表性
         * @example 2.3
         */
        TiR: number | null;
      };
      /**
       * Format: uuid
       * @description トレース識別子
       * @example d9a38406-cae2-4679-b052-15a75f5531f6
       */
      traceId: string;
    };
    "traceability.OperatorModel": {
      /**
       * @description 事業者識別子（ローカル）
       * @example 1234567890123
       */
      openOperatorId: string;
      /**
       * @description 事業者所在地
       * @example xx県xx市xxxx町1-1
       */
      operatorAddress: string;
      operatorAttribute: {
        globalOperatorId?: string;
      };
      /**
       * Format: uuid
       * @description 事業者識別子（内部）
       * @example d9a38406-cae2-4679-b052-15a75f5531e6
       */
      operatorId: string;
      /**
       * @description 事業者名
       * @example A株式会社
       */
      operatorName: string;
    };
    "traceability.PartsModel": {
      /**
       * Format: double
       * @description 活動量
       * @example 1
       */
      amountRequired: number | null;
      /**
       * @description 活動量単位
       * @example kilogram
       * @enum {string|null}
       */
      amountRequiredUnit: "liter" | "kilogram" | "cubic-meter" | "kilowatt-hour" | "megajoule" | "ton-kilometer" | "square-meter" | "unit" | null;
      /**
       * Format: uuid
       * @description 事業者識別子（内部）
       * @example d9a38406-cae2-4679-b052-15a75f5531e8
       */
      operatorId: string;
      /**
       * @description 部品項目
       * @example PartsA-002123
       */
      partsName: string | null;
      /**
       * Format: uuid
       * @description 事業所識別子（内部）
       * @example d9a38406-cae2-4679-b052-15a75f5531e7
       */
      plantId: string;
      /**
       * @description 補助項目
       * @example modelA
       */
      supportPartsName: string | null;
      /**
       * @description 終端フラグ
       * @example false
       */
      terminatedFlag: boolean;
      /**
       * Format: uuid
       * @description トレース識別子
       * @example d9a38406-cae2-4679-b052-15a75f5531e6
       */
      traceId: string | null;
    };
    "traceability.PartsStructureModel": {
      /** @description 子部品情報 */
      childrenPartsModel: components["schemas"]["traceability.PartsModel"][];
      /** @description 親部品情報 */
      parentPartsModel: components["schemas"]["traceability.PartsModel"];
    };
    "traceability.PlantModel": {
      /**
       * @description 事業所識別子（ローカル）
       * @example 1234567890123000000
       */
      openPlantId: string;
      /**
       * Format: uuid
       * @description 事業者識別子（内部）
       * @example d9a38406-cae2-4679-b052-15a75f5531e8
       */
      operatorId: string;
      /**
       * @description 事業所所在地
       * @example xx県xx市xxxx町1-1-1234
       */
      plantAddress: string;
      /**
       * Format: uuid
       * @description 事業所識別子（内部）
       * @example d9a38406-cae2-4679-b052-15a75f5531e7
       */
      plantId: string | null;
      /**
       * @description 事業所名
       * @example A工場
       */
      plantName: string;
      plantAttribute: {
        globalPlantId?: string;
      };
    };
    "traceability.StatusModel": {
      /**
       * @description 依頼メッセージ
       * @example 回答依頼時のメッセージが入ります
       */
      message: string | null;
      /**
       * @description 差戻メッセージ
       * @example 依頼差戻時のメッセージが入ります
       */
      replyMessage: string | null;
      /** @description 依頼ステータス */
      requestStatus: {
        /**
         * @description cfp回答ステータス
         * @enum {string}
         */
        cfpResponseStatus: "NOT_COMPLETED" | "COMPLETED" | "REJECT" | "CANCEL";
        /**
         * @description 樹形図ステータス
         * @enum {string}
         */
        tradeTreeStatus: "TERMINATED" | "UNTERMINATED";
      };
      /**
       * @description 依頼種別
       * @example CFP
       * @enum {string}
       */
      requestType: "CFP";
      /**
       * Format: uuid
       * @description 依頼識別子
       * @example d9a38406-cae2-4679-b052-15a75f5531f0
       */
      statusId: string | null;
      /**
       * Format: uuid
       * @description 取引関係情報識別子
       * @example d9a38406-cae2-4679-b052-15a75f5531f1
       */
      tradeId: string | null;
    };
    "traceability.TradeModel": {
      /**
       * Format: uuid
       * @description 納品先事業者識別子（内部）
       * @example d9a38406-cae2-4679-b052-15a75f5531e7
       */
      downstreamOperatorId: string;
      /**
       * Format: uuid
       * @description 納品先トレース識別子
       * @example d9a38406-cae2-4679-b052-15a75f5531e9
       */
      downstreamTraceId: string;
      /**
       * Format: uuid
       * @description 取引関係情報識別子
       * @example d9a38406-cae2-4679-b052-15a75f5531e6
       */
      tradeId: string | null;
      /**
       * Format: uuid
       * @description 仕入先事業者識別子（内部）
       * @example d9a38406-cae2-4679-b052-15a75f5531e8
       */
      upstreamOperatorId: string;
      /**
       * Format: uuid
       * @description 仕入先トレース識別子
       * @example d9a38406-cae2-4679-b052-15a75f5531f0
       */
      upstreamTraceId: string | null;
    };
    "traceability.TradeRequestModel": {
      statusModel: components["schemas"]["traceability.StatusModel"];
      tradeModel: components["schemas"]["traceability.TradeModel"];
    };
    "traceability.TradeResponseModel": {
      statusModel: components["schemas"]["traceability.StatusModel"];
      tradeModel: components["schemas"]["traceability.TradeModel"];
      partsModel: components["schemas"]["traceability.PartsModel"];
    };
    "traceability.CfpCertificationModel": {
      /**
       * Format: uuid
       * @description CFP証明書識別子
       * @example 7e785ae2-e628-42dc-90af-96f91958edc7
       */
      cfpCertificationId?: string;
      /**
       * Format: uuid
       * @description トレース識別子
       * @example 2680ed32-19a3-435b-a094-23ff43aaa611
       */
      traceId?: string;
      /**
       * @description CFP証明書説明
       * @example CFP証明書の説明が入ります
       */
      cfpCertificationDescription?: string | null;
      cfpCertificationFileInfo?: (({
          /**
           * Format: uuid
           * @description 事業者識別子（内部）
           * @example a1234567-1234-1234-1234-123456789012
           */
          operatorId?: string | null;
          /**
           * Format: uuid
           * @description ファイル識別子
           * @example 5c07e3e9-c0e5-4a1f-b6a5-78145f7d1855
           */
          fileId?: string | null;
          /**
           * @description ファイル名称
           * @example filename.pdf
           */
          fileName?: string | null;
        })[]) | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
